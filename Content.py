''' Часть I. Введение
        Глава 1. Как Python запускает программы
            Введение в интерпретатор Python
            Выполнение программы
            Разновидности модели выполнения
            В заключение
            Закрепление пройденного
        Глава 2. Как пользователь запускает программы
            Интерактивный режим
            Системная командная строка и файлы
            Щелчок на ярлыке файла
            Импортирование и перезагрузка модулей
            Запуск модулей с помощью функции exec
            Пользовательский интерфейс IDLE102
            Другие интегрированные среды разработки
            Другие способы запуска
            Какие способы следует использовать?
            В заключение
            Закрепление пройденного
    Часть II. Типы и операции
        Глава 3. Введение в типы объектов языка Python
            Зачем нужны встроенные типы?
            Числа
            Строки
            Списки
            Словари
            Кортежи
            Файлы
            Другие базовые типы
            В заключение
            Закрепление пройденного
        Глава 4. Числа
            Базовые числовые типы
            Числа в действии
            Другие числовые типы
            Числовые расширения
            В заключение
            Закрепление пройденного
        Глава 5. Интерлюдия о динамической типизации
            Отсутствие инструкций объявления
            Разделяемые ссылки
            Динамическая типизация повсюду
            В заключение
            Закрепление пройденного
            Ответы
        Глава 6. Строки
            Литералы строк
            Строки в действии
            Строковые методы
            Выражения форматирования строк
            Метод форматирования строк
            Общие категории типов
            В заключение
            Закрепление пройденного
        Глава 7. Списки и словари
            Списки
            Списки в действии
            Словари
            Словари в действии
            В заключение
            Закрепление пройденного
        Глава 8. Кортежи, файлы и все остальное
            Кортежи
            Кортежи в действии
            Файлы
            Пересмотренный перечень категорий типов
            Гибкость объектов
            Ссылки и копии
            Сравнивание, равенство и истина
            Иерархии типов данных в языке Python
            Другие типы в Python
            Ловушки встроенных типов
            В заключение
            Закрепление пройденного
    Часть III. Инструкции и синтаксис
        Глава 9. Введение в инструкции языка Python
            Структура программы на языке Python
            История о двух if
            Короткий пример: интерактивные циклы
            В заключение
            Закрепление пройденного
        Глава 10. Присваивание, выражения и print 342
            Инструкции присваивания 342
            Инструкции выражений 360
            Операция print 362
            В заключение 374
            Закрепление пройденного 374
        Глава 11. Условная инструкция if и синтаксические правила 376
            Условные инструкции if
            Синтаксические правила языка Python 379
            Проверка истинности 385
            Трехместное выражение if/else 387
            В заключение 390
            Закрепление пройденного 390
        Глава 12. Циклы while и for 392
            Циклы while 392
            break, continue, pass и else 394
            Циклы for 400
            Приемы программирования циклов 407
            В заключение 415
            Закрепление пройденного 415
        Глава 13. Итерации и генераторы, часть 1 417
            Итераторы: первое знакомство 417
            Генераторы списков: первое знакомство 425
            Новые итерируемые объекты в Python 3.0 433
            Другие темы, связанные с итераторами 439
            В заключение 439
            Закрепление пройденного 439
        Глава 14. Документация 441
            Источники документации в языке Python 441
            Типичные ошибки программирования 453
            В заключение 456
            Закрепление пройденного 456
    Часть IV. Функции 459
        Глава 15. Основы функций 461
            Зачем нужны функции? 462
            Создание функций 463
            Первый пример: определения и вызовы 466
            Второй пример: пересечение последовательностей 469
            В заключение 472
            Закрепление пройденного 472
        Глава 16. Области видимости 474
            Области видимости в языке Python 474
            Инструкция global 482
            Области видимости и вложенные функции 487
            Инструкция nonlocal 494
            В заключение 502
            Закрепление пройденного 502
        Глава 17. Аргументы 505
            Передача аргументов 505
            Специальные режимы сопоставления аргументов 511
            Функция поиска минимума 525
            Универсальные функции для работы с множествами 528
            Имитация функции print в Python 3.0 530
            В заключение 533
            Закрепление пройденного 534
        Глава 18. Расширенные возможности функций 536
            Концепции проектирования функций 536
            Рекурсивные функции  538
            Функции – это объекты: атрибуты и аннотации 542
            Анонимные функции: lambda 548
            Отображение функций на последовательности: map 554
            Средства функционального программирования:
            filter и reduce 556
            В заключение 557
            Закрепление пройденного 558
        Глава 19. Итераторы и генераторы 560
            Еще раз о генераторах списков:
            функциональные инструменты 560
            Еще раз об итераторах: генераторы 567
            Краткая сводка по синтаксису генераторов в 3.0 583
            Хронометраж итерационных альтернатив 586
            Типичные ошибки при работе с функциями 596
            В заключение 600
            Закрепление пройденного 601
    Часть V. Модули 605
        Глава 20. Модули: общая картина 607
            Зачем нужны модули? 608
            Архитектура программы на языке Python 608
            Как работает импорт 612
            Путь поиска модулей 614
            В заключение 620
            Закрепление пройденного 621
        Глава 21. Основы программирования модулей 623
            Создание модуля 623
            Использование модулей 624
            Пространства имен модулей 630
            Повторная загрузка модулей 635
            В заключение 639
            Закрепление пройденного 640
        Глава 22. Пакеты модулей 641
            Основы операции импортирования пакетов 641
            Пример импортирования пакета 645
            Когда используется операция импортирования пакетов?  647
            Импортирование относительно пакета 650
            В заключение 663
            Закрепление пройденного 664
        Глава 23. Дополнительные возможности модулей 665
            Сокрытие данных в модулях 665
            Включение будущих возможностей языка 666
            Смешанные режимы использования:
            __name__ и __main__ 667
            Изменение пути поиска модулей 672
            Расширение as для инструкций import и from 673
            Модули – это объекты: метапрограммы 674
            Импортирование модулей по имени в виде строки 677
            Транзитивная перезагрузка модулей  678
            Концепции проектирования модулей 681
            Типичные проблемы при работе с модулями 682
            В заключение 688
            Закрепление пройденного 688
    Часть VI. Классы и ООП 693
        Глава 24. ООП: общая картина 695
            Зачем нужны классы? 696
            ООП с высоты 30 000 футов 697
            В заключение 706
            Закрепление пройденного 707
        Глава 25. Основы программирования классов 709
            Классы генерируют множество экземпляров объектов 709
            Классы адаптируются посредством наследования 713
            Классы могут переопределять операторы языка Python 717
            Самый простой в мире класс на языке Python 721
            Классы и словари  723
            В заключение 725
            Закрепление пройденного 726
        Глава 26. Более реалистичный пример 728
            Шаг 1: создание экземпляров  729
            Шаг 2: добавление методов, определяющих поведение 733
            Шаг 3: перегрузка операторов 737
            Шаг 4: адаптация поведения с помощью подклассов 739
            Шаг 5: адаптация конструкторов 745
            Шаг 6: использование инструментов интроспекции 750
            Шаг 7 (последний): сохранение объектов в базе данных 757
            Рекомендации на будущее 763
            В заключение 765
            Закрепление пройденного 766
        Глава 27. Подробнее о программировании классов 769
            Инструкция class 769
            Методы 772
            Наследование 775
            Пространства имен: окончание истории  781
            Еще раз о строках документирования 790
            Классы и модули  791
            В заключение 792
            Закрепление пройденного 792
        Глава 28. Перегрузка операторов 794
            Доступ к элементам по индексу и извлечение срезов:
            __getitem__ и __setitem__  797
            Итерации по индексам: __getitem__ 800
            Итераторы: __iter__ и __next__ 802
            Проверка на вхождение:
            __contains__, __iter__ и __getitem__ 807
            Обращения к атрибутам: __getattr__ и __setattr__ 809
            Строковое представление объектов: __repr__ и __str__ 812
            Правостороннее сложение и операция приращения:
            __radd__ и __iadd__ 814
            Операция вызова: __call__ 816
            Функциональные интерфейсы
            и программный код обратного вызова 818
            Сравнивание: __lt__, __gt__ и другие 820
            Проверка логического значения: __bool__ и __len__ 821
            В заключение 825
            Закрепление пройденного 826
        Глава 29. Шаблоны проектирования с классами 828
            Python и ООП 828
            ООП и наследование:
            взаимосвязи типа «является» 830
            ООП и композиция: взаимосвязи типа «имеет» 832
            ООП и делегирование: объекты-обертки 837
            Псевдочастные атрибуты класса 839
            Методы – это объекты:
            связанные и несвязанные методы 842
            Множественное наследование: примесные классы 849
            Классы – это объекты:
            универсальные фабрики объектов 861
            Прочие темы, связанные с проектированием  863
            В заключение 863
            Закрепление пройденного 864
        Глава 30. Дополнительные возможности классов. 865
            Расширение встроенных типов 866
            Классы «нового стиля». 869
            Изменения в классах нового стиля. 870
            Другие расширения в классах нового стиля. 880
            Статические методы и методы класса 887
            Декораторы и метаклассы: часть 1. 896
            Типичные проблемы при работе с классами. 901
            В заключение 907
            Закрепление пройденного. 908
    Часть VII. Исключения и инструменты 917
        Глава 31. Основы исключений. . 919
            Зачем нужны исключения?. 920
            Обработка исключений: краткий обзор. 921
            В заключение 927
            Закрепление пройденного. 928
        Глава 32. Особенности использования исключений. 929
            Инструкция try/except/else 929
            Инструкция try/finally. 936
            Объединенная инструкция try/except/finally 939
            Инструкция raise. 943
            Инструкция assert. 946
            Контекстные менеджеры with/as. 948
            В заключение 952
            Закрепление пройденного. 952
        Глава 33. Объекты исключений. 954
            Исключения: назад в будущее. 955
            Исключения на основе классов 956
            В чем преимущества иерархий исключений?  959
            Классы встроенных исключений 962
            Определение текста исключения 965
            Передача данных в экземплярах и реализация поведения . 966
            В заключение 968
            Закрепление пройденного. 969
        Глава 34. Использование исключений. 971
            Вложенные обработчики исключений. 971
            Идиомы исключений 975
            Советы по применению
            и типичные проблемы исключений 980
            Заключение по основам языка. 984
            В заключение 990
            Закрепление пройденного. 991
    Часть VIII. Расширенные возможности. 993
        Глава 35. Юникод и строки байтов 995
            Изменения в Python 3.0, касающиеся строк. 996
            Основы строк 997
            Примеры использования строк в Python 3.0 1003
            Кодирование строк Юникода. 1006
            Использование объектов bytes в Python 3.0 1015
            Использование объектов bytearray в 3.0 (и 2.6)  1018
            Использование текстовых и двоичных файлов. 1021
            Использование файлов Юникода 1026
            Другие инструменты для работы со строками в Python 3.0. 1031
            В заключение 1039
            Закрепление пройденного. 1040
        Глава 36. Управляемые атрибуты.  1043
            Зачем нужно управлять атрибутами?. 1043
            Свойства. 1045
            Дескрипторы. 1050
            __getattr__ и __getattribute__. 1059
            Пример: проверка атрибутов. 1078
            В заключение 1084
            Закрепление пройденного. 1084
        Глава 37. Декораторы. 1087
            Что такое декоратор?. 1087
            Основы. 1090
            Программирование декораторов функций. 1100
            Программирование декораторов классов. 1116
            Непосредственное управление функциями и классами 1127
            Пример: «частные» и «общедоступные» атрибуты 1130
            Пример: проверка аргументов функций 1142
            В заключение 1155
            Закрепление пройденного. 1156
        Глава 38. Метаклассы. 1160
            Нужны или не нужны метаклассы. 1161
            Модель метаклассов. 1168
            Объявление метаклассов. 1172
            Программирование метаклассов 1173
            Пример: добавление методов в классы 1179
            Пример: применение декораторов к методам. 1186
            В заключение 1194
            Закрепление пройденного. 1195
    Часть IX. Приложения 1197
        Приложение A. Установка и настройка 1199
        Установка интерпретатора Python 1199
        Настройка Python 1203
        Параметры командной строки интерпретатора. 1208
        Дополнительная информация 1209
        Приложение B. Решения упражнений. 1211'''
